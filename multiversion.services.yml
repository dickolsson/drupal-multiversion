parameters:
  workspace.default: 1

services:
  # Index Factory
  multiversion.entity_index.factory:
    class: Drupal\multiversion\Entity\Index\MultiversionIndexFactory
    arguments: ['@service_container', '@workspace.manager']

  # Index children
  multiversion.entity_index.sequence.scope:
    parent: multiversion.entity_index.sequence
    scope: prototype
  multiversion.entity_index.id.scope:
    parent: multiversion.entity_index.id
    scope: prototype
  multiversion.entity_index.uuid.scope:
    parent: multiversion.entity_index.uuid
    scope: prototype
  multiversion.entity_index.rev.scope:
    parent: multiversion.entity_index.rev
    scope: prototype
  multiversion.entity_index.rev.tree.scope:
    parent: multiversion.entity_index.rev.tree
    scope: prototype

  # Indexes
  multiversion.entity_index.sequence:
    class: Drupal\multiversion\Entity\Index\SequenceIndex
    arguments: ['@keyvalue.sorted_set', '@workspace.manager', '@multiversion.manager']
  multiversion.entity_index.id:
    class: Drupal\multiversion\Entity\Index\EntityIndex
    arguments: ['@keyvalue', '@workspace.manager']
  multiversion.entity_index.uuid:
    class: Drupal\multiversion\Entity\Index\UuidIndex
    arguments: ['@keyvalue', '@workspace.manager']
  multiversion.entity_index.rev:
    class: Drupal\multiversion\Entity\Index\RevisionIndex
    arguments: ['@keyvalue', '@workspace.manager']
  multiversion.entity_index.rev.tree:
    class: Drupal\multiversion\Entity\Index\RevisionTreeIndex
    arguments: ['@keyvalue', '@workspace.manager', '@multiversion.entity_index.factory']

  multiversion.entity.query.sql:
    class: Drupal\multiversion\Entity\Query\Sql\QueryFactory
    arguments: ['@database']
  multiversion.manager:
    class: Drupal\multiversion\MultiversionManager
    arguments: ['@workspace.manager', '@serializer', '@entity.manager', '@state', '@language_manager', '@cache.discovery', '@database', '@entity_field.manager']
    calls:
      - [setContainer, ['@service_container']]
  multiversion.conflict_tracker:
    class: Drupal\multiversion\Conflict\ConflictTracker
    arguments: ['@keyvalue', '@workspace.manager']
  cache_context.workspace:
    class: Drupal\multiversion\WorkspaceCacheContext
    arguments: ['@workspace.manager']
    tags:
      - { name: cache.context }
  logger.channel.workspace:
    parent: logger.channel_base
    arguments: ['cron']
  conflict.complexlca_resolver:
    class: Drupal\multiversion\Entity\Index\ComplexLcaResolver
    tags:
      - { name: lca_resolver, priority: 20 }
  multiversion.serializer.normalizer.entity_reference_item:
    class: Drupal\multiversion\Normalizer\WorkspaceReferenceItemNormalizer
    tags:
      - { name: normalizer, priority: 50 }
  multiversion.alias_storage:
    decorates: 'path.alias_storage'
    class: Drupal\multiversion\AliasStorage
    arguments: ['@database', '@module_handler', '@workspace.manager', '@entity_type.manager', '@state']
    public: false
    decoration_priority: 50
    tags:
      - { name: backend_overridable }
  # The decorated service must remain public in order to not break views
  # (de-)serialization.
  # See https://www.drupal.org/project/multiversion/issues/2973609
  multiversion.route_provider:
    decorates: 'router.route_provider'
    class: Drupal\multiversion\RouteProvider
    arguments: ['@database', '@state', '@path.current', '@cache.data', '@path_processor_manager', '@cache_tags.invalidator', 'router', '@language_manager', '@workspace.manager']
    decoration_priority: 50
    tags:
      - { name: event_subscriber }
      - { name: backend_overridable }
